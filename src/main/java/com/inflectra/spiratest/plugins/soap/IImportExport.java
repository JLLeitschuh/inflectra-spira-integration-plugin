
package com.inflectra.spiratest.plugins.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "IImportExport", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IImportExport {


    /**
     * 
     * @param userName
     * @param password
     * @return
     *     returns java.lang.Boolean
     * @throws IImportExportConnectionAuthenticateServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Connection_Authenticate", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate")
    @WebResult(name = "Connection_AuthenticateResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Connection_Authenticate", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionAuthenticate")
    @ResponseWrapper(localName = "Connection_AuthenticateResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionAuthenticateResponse")
    public Boolean connectionAuthenticate(
        @WebParam(name = "userName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String password)
        throws IImportExportConnectionAuthenticateServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param plugInName
     * @param userName
     * @param password
     * @return
     *     returns java.lang.Boolean
     * @throws IImportExportConnectionAuthenticate2ServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Connection_Authenticate2", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Authenticate2")
    @WebResult(name = "Connection_Authenticate2Result", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Connection_Authenticate2", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionAuthenticate2")
    @ResponseWrapper(localName = "Connection_Authenticate2Response", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionAuthenticate2Response")
    public Boolean connectionAuthenticate2(
        @WebParam(name = "userName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String password,
        @WebParam(name = "plugInName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String plugInName)
        throws IImportExportConnectionAuthenticate2ServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param projectId
     * @return
     *     returns java.lang.Boolean
     * @throws IImportExportConnectionConnectToProjectServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Connection_ConnectToProject", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_ConnectToProject")
    @WebResult(name = "Connection_ConnectToProjectResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Connection_ConnectToProject", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionConnectToProject")
    @ResponseWrapper(localName = "Connection_ConnectToProjectResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionConnectToProjectResponse")
    public Boolean connectionConnectToProject(
        @WebParam(name = "projectId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer projectId)
        throws IImportExportConnectionConnectToProjectServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @throws IImportExportConnectionDisconnectServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Connection_Disconnect", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/Connection_Disconnect")
    @RequestWrapper(localName = "Connection_Disconnect", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionDisconnect")
    @ResponseWrapper(localName = "Connection_DisconnectResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ConnectionDisconnectResponse")
    public void connectionDisconnect()
        throws IImportExportConnectionDisconnectServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws IImportExportSystemGetProductNameServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "System_GetProductName", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetProductName")
    @WebResult(name = "System_GetProductNameResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "System_GetProductName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetProductName")
    @ResponseWrapper(localName = "System_GetProductNameResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetProductNameResponse")
    public String systemGetProductName()
        throws IImportExportSystemGetProductNameServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns javax.xml.datatype.XMLGregorianCalendar
     * @throws IImportExportSystemGetServerDateTimeServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "System_GetServerDateTime", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetServerDateTime")
    @WebResult(name = "System_GetServerDateTimeResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "System_GetServerDateTime", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetServerDateTime")
    @ResponseWrapper(localName = "System_GetServerDateTimeResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetServerDateTimeResponse")
    public XMLGregorianCalendar systemGetServerDateTime()
        throws IImportExportSystemGetServerDateTimeServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws IImportExportSystemGetWebServerUrlServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "System_GetWebServerUrl", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IService/System_GetWebServerUrl")
    @WebResult(name = "System_GetWebServerUrlResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "System_GetWebServerUrl", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetWebServerUrl")
    @ResponseWrapper(localName = "System_GetWebServerUrlResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetWebServerUrlResponse")
    public String systemGetWebServerUrl()
        throws IImportExportSystemGetWebServerUrlServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param remoteIncident
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteIncident
     * @throws IImportExportIncidentCreateServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Incident_Create", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Create")
    @WebResult(name = "Incident_CreateResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Incident_Create", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentCreate")
    @ResponseWrapper(localName = "Incident_CreateResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentCreateResponse")
    public RemoteIncident incidentCreate(
        @WebParam(name = "remoteIncident", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteIncident remoteIncident)
        throws IImportExportIncidentCreateServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param numberOfRows
     * @param remoteFilters
     * @param remoteSort
     * @param startingRow
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteIncident
     * @throws IImportExportIncidentRetrieveServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Incident_Retrieve", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Retrieve")
    @WebResult(name = "Incident_RetrieveResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Incident_Retrieve", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentRetrieve")
    @ResponseWrapper(localName = "Incident_RetrieveResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentRetrieveResponse")
    public ArrayOfRemoteIncident incidentRetrieve(
        @WebParam(name = "remoteFilters", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfRemoteFilter remoteFilters,
        @WebParam(name = "remoteSort", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteSort remoteSort,
        @WebParam(name = "startingRow", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer startingRow,
        @WebParam(name = "numberOfRows", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer numberOfRows)
        throws IImportExportIncidentRetrieveServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param incidentId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteIncident
     * @throws IImportExportIncidentRetrieveByIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Incident_RetrieveById", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_RetrieveById")
    @WebResult(name = "Incident_RetrieveByIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Incident_RetrieveById", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentRetrieveById")
    @ResponseWrapper(localName = "Incident_RetrieveByIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentRetrieveByIdResponse")
    public RemoteIncident incidentRetrieveById(
        @WebParam(name = "incidentId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer incidentId)
        throws IImportExportIncidentRetrieveByIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param remoteIncident
     * @throws IImportExportIncidentUpdateServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Incident_Update", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Incident_Update")
    @RequestWrapper(localName = "Incident_Update", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentUpdate")
    @ResponseWrapper(localName = "Incident_UpdateResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.IncidentUpdateResponse")
    public void incidentUpdate(
        @WebParam(name = "remoteIncident", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteIncident remoteIncident)
        throws IImportExportIncidentUpdateServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteProject
     * @throws IImportExportProjectRetrieveServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Project_Retrieve", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_Retrieve")
    @WebResult(name = "Project_RetrieveResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Project_Retrieve", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ProjectRetrieve")
    @ResponseWrapper(localName = "Project_RetrieveResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ProjectRetrieveResponse")
    public ArrayOfRemoteProject projectRetrieve()
        throws IImportExportProjectRetrieveServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param projectId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteProject
     * @throws IImportExportProjectRetrieveByIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Project_RetrieveById", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Project_RetrieveById")
    @WebResult(name = "Project_RetrieveByIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Project_RetrieveById", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ProjectRetrieveById")
    @ResponseWrapper(localName = "Project_RetrieveByIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ProjectRetrieveByIdResponse")
    public RemoteProject projectRetrieveById(
        @WebParam(name = "projectId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer projectId)
        throws IImportExportProjectRetrieveByIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param activeOnly
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteRelease
     * @throws IImportExportReleaseRetrieveServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Release_Retrieve", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Retrieve")
    @WebResult(name = "Release_RetrieveResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Release_Retrieve", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ReleaseRetrieve")
    @ResponseWrapper(localName = "Release_RetrieveResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ReleaseRetrieveResponse")
    public ArrayOfRemoteRelease releaseRetrieve(
        @WebParam(name = "activeOnly", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Boolean activeOnly)
        throws IImportExportReleaseRetrieveServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param numberOfRows
     * @param remoteFilters
     * @param startingRow
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteRelease
     * @throws IImportExportReleaseRetrieve2ServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Release_Retrieve2", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Release_Retrieve2")
    @WebResult(name = "Release_Retrieve2Result", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Release_Retrieve2", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ReleaseRetrieve2")
    @ResponseWrapper(localName = "Release_Retrieve2Response", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.ReleaseRetrieve2Response")
    public ArrayOfRemoteRelease releaseRetrieve2(
        @WebParam(name = "remoteFilters", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfRemoteFilter remoteFilters,
        @WebParam(name = "startingRow", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer startingRow,
        @WebParam(name = "numberOfRows", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer numberOfRows)
        throws IImportExportReleaseRetrieve2ServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteVersion
     * @throws IImportExportSystemGetProductVersionServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "System_GetProductVersion", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetProductVersion")
    @WebResult(name = "System_GetProductVersionResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "System_GetProductVersion", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetProductVersion")
    @ResponseWrapper(localName = "System_GetProductVersionResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetProductVersionResponse")
    public RemoteVersion systemGetProductVersion()
        throws IImportExportSystemGetProductVersionServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteSetting
     * @throws IImportExportSystemGetSettingsServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "System_GetSettings", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetSettings")
    @WebResult(name = "System_GetSettingsResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "System_GetSettings", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetSettings")
    @ResponseWrapper(localName = "System_GetSettingsResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetSettingsResponse")
    public ArrayOfRemoteSetting systemGetSettings()
        throws IImportExportSystemGetSettingsServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param navigationLinkId
     * @param tabName
     * @param artifactId
     * @param projectId
     * @return
     *     returns java.lang.String
     * @throws IImportExportSystemGetArtifactUrlServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "System_GetArtifactUrl", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/System_GetArtifactUrl")
    @WebResult(name = "System_GetArtifactUrlResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "System_GetArtifactUrl", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetArtifactUrl")
    @ResponseWrapper(localName = "System_GetArtifactUrlResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.SystemGetArtifactUrlResponse")
    public String systemGetArtifactUrl(
        @WebParam(name = "navigationLinkId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer navigationLinkId,
        @WebParam(name = "projectId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer projectId,
        @WebParam(name = "artifactId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer artifactId,
        @WebParam(name = "tabName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String tabName)
        throws IImportExportSystemGetArtifactUrlServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param releaseId
     * @param testCaseIds
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteManualTestRun
     * @throws IImportExportTestRunCreateFromTestCasesServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_CreateFromTestCases", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFromTestCases")
    @WebResult(name = "TestRun_CreateFromTestCasesResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_CreateFromTestCases", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateFromTestCases")
    @ResponseWrapper(localName = "TestRun_CreateFromTestCasesResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateFromTestCasesResponse")
    public ArrayOfRemoteManualTestRun testRunCreateFromTestCases(
        @WebParam(name = "testCaseIds", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfint testCaseIds,
        @WebParam(name = "releaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer releaseId)
        throws IImportExportTestRunCreateFromTestCasesServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param testSetId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteManualTestRun
     * @throws IImportExportTestRunCreateFromTestSetServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_CreateFromTestSet", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateFromTestSet")
    @WebResult(name = "TestRun_CreateFromTestSetResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_CreateFromTestSet", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateFromTestSet")
    @ResponseWrapper(localName = "TestRun_CreateFromTestSetResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateFromTestSetResponse")
    public ArrayOfRemoteManualTestRun testRunCreateFromTestSet(
        @WebParam(name = "testSetId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testSetId)
        throws IImportExportTestRunCreateFromTestSetServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param dateRange
     * @param automationHostToken
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteAutomatedTestRun
     * @throws IImportExportTestRunCreateForAutomationHostServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_CreateForAutomationHost", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForAutomationHost")
    @WebResult(name = "TestRun_CreateForAutomationHostResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_CreateForAutomationHost", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateForAutomationHost")
    @ResponseWrapper(localName = "TestRun_CreateForAutomationHostResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateForAutomationHostResponse")
    public ArrayOfRemoteAutomatedTestRun testRunCreateForAutomationHost(
        @WebParam(name = "automationHostToken", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String automationHostToken,
        @WebParam(name = "dateRange", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        DateRange dateRange)
        throws IImportExportTestRunCreateForAutomationHostServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param testSetId
     * @param automationHostToken
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteAutomatedTestRun
     * @throws IImportExportTestRunCreateForAutomatedTestSetServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_CreateForAutomatedTestSet", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_CreateForAutomatedTestSet")
    @WebResult(name = "TestRun_CreateForAutomatedTestSetResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_CreateForAutomatedTestSet", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateForAutomatedTestSet")
    @ResponseWrapper(localName = "TestRun_CreateForAutomatedTestSetResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunCreateForAutomatedTestSetResponse")
    public ArrayOfRemoteAutomatedTestRun testRunCreateForAutomatedTestSet(
        @WebParam(name = "testSetId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testSetId,
        @WebParam(name = "automationHostToken", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String automationHostToken)
        throws IImportExportTestRunCreateForAutomatedTestSetServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param remoteTestRun
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteAutomatedTestRun
     * @throws IImportExportTestRunRecordAutomated1ServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_RecordAutomated1", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAutomated1")
    @WebResult(name = "TestRun_RecordAutomated1Result", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_RecordAutomated1", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRecordAutomated1")
    @ResponseWrapper(localName = "TestRun_RecordAutomated1Response", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRecordAutomated1Response")
    public RemoteAutomatedTestRun testRunRecordAutomated1(
        @WebParam(name = "remoteTestRun", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteAutomatedTestRun remoteTestRun)
        throws IImportExportTestRunRecordAutomated1ServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param startDate
     * @param runnerAssertCount
     * @param testerUserId
     * @param testSetTestCaseId
     * @param endDate
     * @param runnerStackTrace
     * @param projectId
     * @param runnerName
     * @param password
     * @param testSetId
     * @param releaseId
     * @param runnerMessage
     * @param userName
     * @param executionStatusId
     * @param runnerTestName
     * @param testCaseId
     * @return
     *     returns java.lang.Integer
     * @throws IImportExportTestRunRecordAutomated2ServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_RecordAutomated2", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAutomated2")
    @WebResult(name = "TestRun_RecordAutomated2Result", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_RecordAutomated2", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRecordAutomated2")
    @ResponseWrapper(localName = "TestRun_RecordAutomated2Response", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRecordAutomated2Response")
    public Integer testRunRecordAutomated2(
        @WebParam(name = "userName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String password,
        @WebParam(name = "projectId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer projectId,
        @WebParam(name = "testerUserId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testerUserId,
        @WebParam(name = "testCaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testCaseId,
        @WebParam(name = "releaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer releaseId,
        @WebParam(name = "testSetId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testSetId,
        @WebParam(name = "testSetTestCaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testSetTestCaseId,
        @WebParam(name = "startDate", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        XMLGregorianCalendar endDate,
        @WebParam(name = "executionStatusId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer executionStatusId,
        @WebParam(name = "runnerName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String runnerName,
        @WebParam(name = "runnerTestName", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String runnerTestName,
        @WebParam(name = "runnerAssertCount", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer runnerAssertCount,
        @WebParam(name = "runnerMessage", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String runnerMessage,
        @WebParam(name = "runnerStackTrace", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        String runnerStackTrace)
        throws IImportExportTestRunRecordAutomated2ServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param remoteTestRuns
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteAutomatedTestRun
     * @throws IImportExportTestRunRecordAutomated3ServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_RecordAutomated3", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RecordAutomated3")
    @WebResult(name = "TestRun_RecordAutomated3Result", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_RecordAutomated3", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRecordAutomated3")
    @ResponseWrapper(localName = "TestRun_RecordAutomated3Response", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRecordAutomated3Response")
    public ArrayOfRemoteAutomatedTestRun testRunRecordAutomated3(
        @WebParam(name = "remoteTestRuns", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfRemoteAutomatedTestRun remoteTestRuns)
        throws IImportExportTestRunRecordAutomated3ServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param numberOfRows
     * @param remoteFilters
     * @param remoteSort
     * @param startingRow
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteTestRun
     * @throws IImportExportTestRunRetrieveServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_Retrieve", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_Retrieve")
    @WebResult(name = "TestRun_RetrieveResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_Retrieve", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieve")
    @ResponseWrapper(localName = "TestRun_RetrieveResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveResponse")
    public ArrayOfRemoteTestRun testRunRetrieve(
        @WebParam(name = "remoteFilters", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfRemoteFilter remoteFilters,
        @WebParam(name = "remoteSort", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteSort remoteSort,
        @WebParam(name = "startingRow", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer startingRow,
        @WebParam(name = "numberOfRows", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer numberOfRows)
        throws IImportExportTestRunRetrieveServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param testRunId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteTestRun
     * @throws IImportExportTestRunRetrieveByIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_RetrieveById", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveById")
    @WebResult(name = "TestRun_RetrieveByIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_RetrieveById", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveById")
    @ResponseWrapper(localName = "TestRun_RetrieveByIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveByIdResponse")
    public RemoteTestRun testRunRetrieveById(
        @WebParam(name = "testRunId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testRunId)
        throws IImportExportTestRunRetrieveByIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param testRunId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteAutomatedTestRun
     * @throws IImportExportTestRunRetrieveAutomatedByIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_RetrieveAutomatedById", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveAutomatedById")
    @WebResult(name = "TestRun_RetrieveAutomatedByIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_RetrieveAutomatedById", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveAutomatedById")
    @ResponseWrapper(localName = "TestRun_RetrieveAutomatedByIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveAutomatedByIdResponse")
    public RemoteAutomatedTestRun testRunRetrieveAutomatedById(
        @WebParam(name = "testRunId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testRunId)
        throws IImportExportTestRunRetrieveAutomatedByIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param testRunId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteManualTestRun
     * @throws IImportExportTestRunRetrieveManualByIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_RetrieveManualById", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_RetrieveManualById")
    @WebResult(name = "TestRun_RetrieveManualByIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_RetrieveManualById", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveManualById")
    @ResponseWrapper(localName = "TestRun_RetrieveManualByIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunRetrieveManualByIdResponse")
    public RemoteManualTestRun testRunRetrieveManualById(
        @WebParam(name = "testRunId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer testRunId)
        throws IImportExportTestRunRetrieveManualByIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param remoteTestRuns
     * @param endDate
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteManualTestRun
     * @throws IImportExportTestRunSaveServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "TestRun_Save", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/TestRun_Save")
    @WebResult(name = "TestRun_SaveResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "TestRun_Save", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunSave")
    @ResponseWrapper(localName = "TestRun_SaveResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.TestRunSaveResponse")
    public ArrayOfRemoteManualTestRun testRunSave(
        @WebParam(name = "remoteTestRuns", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfRemoteManualTestRun remoteTestRuns,
        @WebParam(name = "endDate", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        XMLGregorianCalendar endDate)
        throws IImportExportTestRunSaveServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param releaseId
     * @param numberOfRows
     * @param remoteFilters
     * @param remoteSort
     * @param startingRow
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.ArrayOfRemoteBuild
     * @throws IImportExportBuildRetrieveByReleaseIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Build_RetrieveByReleaseId", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Build_RetrieveByReleaseId")
    @WebResult(name = "Build_RetrieveByReleaseIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Build_RetrieveByReleaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.BuildRetrieveByReleaseId")
    @ResponseWrapper(localName = "Build_RetrieveByReleaseIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.BuildRetrieveByReleaseIdResponse")
    public ArrayOfRemoteBuild buildRetrieveByReleaseId(
        @WebParam(name = "releaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer releaseId,
        @WebParam(name = "remoteFilters", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        ArrayOfRemoteFilter remoteFilters,
        @WebParam(name = "remoteSort", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteSort remoteSort,
        @WebParam(name = "startingRow", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer startingRow,
        @WebParam(name = "numberOfRows", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer numberOfRows)
        throws IImportExportBuildRetrieveByReleaseIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param releaseId
     * @param buildId
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteBuild
     * @throws IImportExportBuildRetrieveByIdServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Build_RetrieveById", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Build_RetrieveById")
    @WebResult(name = "Build_RetrieveByIdResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Build_RetrieveById", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.BuildRetrieveById")
    @ResponseWrapper(localName = "Build_RetrieveByIdResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.BuildRetrieveByIdResponse")
    public RemoteBuild buildRetrieveById(
        @WebParam(name = "releaseId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer releaseId,
        @WebParam(name = "buildId", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        Integer buildId)
        throws IImportExportBuildRetrieveByIdServiceFaultMessageFaultFaultMessage
    ;

    /**
     * 
     * @param remoteBuild
     * @return
     *     returns com.inflectra.spiratest.plugins.soap.RemoteBuild
     * @throws IImportExportBuildCreateServiceFaultMessageFaultFaultMessage
     */
    @WebMethod(operationName = "Build_Create", action = "http://www.inflectra.com/SpiraTest/Services/v3.0/IImportExport/Build_Create")
    @WebResult(name = "Build_CreateResult", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
    @RequestWrapper(localName = "Build_Create", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.BuildCreate")
    @ResponseWrapper(localName = "Build_CreateResponse", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/", className = "com.inflectra.spiratest.plugins.soap.BuildCreateResponse")
    public RemoteBuild buildCreate(
        @WebParam(name = "remoteBuild", targetNamespace = "http://www.inflectra.com/SpiraTest/Services/v3.0/")
        RemoteBuild remoteBuild)
        throws IImportExportBuildCreateServiceFaultMessageFaultFaultMessage
    ;

}
